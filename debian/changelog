ntf-core (2.4.2) unstable; urgency=low

  * c2e9609 Release 2.4.2
  * c86b4c8 Allow the encryption certificate version to be omitted from the encoding if using X.509 v1
  * 904bbe5 TSAN: Fix data race in ntcs::Chronology test driver
  * efa622b Enhance mocking framework, re-enable mocking framework support in C++03, and enhance participating test drivers
  * 81de50a ntsu::SocketUtil::pair: always set `reuseAddress` to false
  * a591a82 Depend on system libraries based on system name, not on the compiler name (#166)

 -- Matt Millett <mmillett2@bloomberg.net>  Fri, 14 Jun 2024 14:08:41 -0400

ntf-core (2.4.1) git; urgency=low

  * e21287c Release 2.4.1 to DPKG
  * dc5cfe2 Release 2.4.1
  * 2db3ec0 Remove -fcoroutines-ts flag for clang starting from 16.0

 -- Matt Millett <mmillett2@bloomberg.net>  Mon, 3 Jun 2024 13:34:03 -0400

ntf-core (2.4.0) git; urgency=low

  * 2568497 Release 2.4.0
  * 2470996 Fix bug incorrectly narrowing a 64-bit unsigned integer to a size_t when encoding to base-128
  * 7985595 Fix compilation errors in the ntsa_abstract test driver for 32-bit platforms in C++03
  * f1bc1f2 Modernize usage and support for public key cryptography

 -- Matt Millett <mmillett@mailbox.org>  Mon, 3 Jun 2024 13:19:54 -0400

ntf-core (2.3.9) git; urgency=low

  * 65e8c02 Release 2.3.9 to DPKG
  * f42b8f0 Release 2.3.9
  * d597d26 Implement ntsu::SocketOptionUtil::get/setTcpCongestionControl on Windows, implement ntsf::System::getBlocking

 -- Matt Millett <mmillett2@bloomberg.net>  Thu, 9 May 2024 08:33:09 -0400

ntf-core (2.3.8) git; urgency=low

  * 7262361 Release 2.3.8 to DPKG
  * 481289b Release 2.3.8
  * a604360 Encapsulate mocking test structures and functions inside a struct instead of a nested namespace

 -- Matt Millett <mmillett2@bloomberg.net>  Sat, 4 May 2024 10:29:44 -0400

ntf-core (2.3.7) git; urgency=low

  * 1f9ff72 Release 2.3.7 to DPKG
  * 4b84e95 Release 2.3.7 (#152)
  * d2f23c8 Disable mocking test framework and dependant tests unless built with C++20

 -- Matt Millett <mmillett2@bloomberg.net>  Thu, 2 May 2024 13:04:44 -0400

ntf-core (2.3.6) git; urgency=low

  * d4d0674 Release 2.3.6 to DPKG
  * 9f50b57 Release 2.3.6
  * 64cf5da Eliminate warnings from unused variables on platforms that do not support congestion control algorithm specification
  * 174e5b4 Introduce slimmer wrapper around 'recv' for simple use-cases
  * da1cedc Support the explicit configuration of a specific TCP congestion control algorithm
  * ab4c796 Publicize buffer algorithms previously in ntsu_buffer to ntsa_buffer
  * 33fd060 Implement a mocking testing framework and test the ntcr::StreamSocket shutdown sequence during connection phase using a white-box testing approach

 -- Matt Millett <mmillett2@bloomberg.net>  Thu, 2 May 2024 11:32:31 -0400

ntf-core (2.3.5) git; urgency=low

  * bdd5057 Release 2.3.5 to DPKG
  * e114e3a Release 2.3.5
  * f87558c Fix typo bind to `Kqueue::removeDetached` in `ntco::Kqueue` constructor for C++03 builds

 -- Sergey Mitrofanov <smitrofanov@bloomberg.net>  Fri, 19 Apr 2024 09:56:06 -0400

ntf-core (2.3.4) git; urgency=low

  * 13f50d5 Release 2.3.4 to DPKG
  * cecbabb Release 2.3.4
  * 33859c7 Rename ntsi::{Datagram,Stream,Listener}Socket::isBlocking to getBlocking
  * a309110 Rename ntsi::{Datagram,Stream,Listener}Socket::isBlocking to getBlocking
  * 4faad11 Add overload to `send(const ntsa::ConstBuffer*, bsl::size_t` for NTS sockets
  * b9e5d3c Support detection of file descriptor blocking mode on Unixes
  * fe4a079 Fix compilation errors specifically compiling for C++03

 -- Matt Millett <mmillett2@bloomberg.net>  Fri, 12 Apr 2024 17:48:53 -0400

ntf-core (2.3.3) git; urgency=low

  * 60f95cb Release 2.3.3 to DPKG
  * bb7740a Release 2.3.3
  * 2208636 Add explicit constructors for ntsa::Endpoint taking a ntsa::Ipv4Endpoint and ntsa::Ipv6Endpoint
  * 9ce2bd2 Add ntsi::{Datagram,Listener,Stream}SocketFactory
  * 1ec2138 Defer StreamSocket shutdown execution if the socket is waiting for detachment to be finished
  * 7d7ae93 Eliminate warnings when metrics are explicitly disabled

 -- Matt Millett <mmillett2@bloomberg.net>  Fri, 22 Mar 2024 16:59:18 -0400

ntf-core (2.3.2) git; urgency=low

  * 16034f0 Release 2.3.2 to DPKG
  * c5580af Release 2.3.2
  * d87f42a Remove support for the old BDE build system

 -- Matt Millett <mmillett2@bloomberg.net>  Fri, 23 Feb 2024 16:05:21 -0500

ntf-core (2.3.1) git; urgency=low

  * 5a4f38a Release 2.3.1 to DPKG
  * 008d7e2 Release 2.3.1
  * 01b3431 Do not define template member functions for fields of ntcs::Event not defined on Windows

 -- Matt Millett <mmillett2@bloomberg.net>  Fri, 16 Feb 2024 21:30:49 -0500

ntf-core (2.3.0) git; urgency=low

  * 441405c Release 2.3.0 to DPKG
  * 128e639 Release 2.3.0
  * c6095e9 Release 2.2.5
  * 3a62855 Standardize bbsdpkgconfig
  * fd40ef5 Ensure upgrade callbacks are correctly reset when shutting down sending while a TLS upgrade is in-progress
  * 6a01a3b Update build system to 2.0.1
  * ba2d242 Support explicit open and close of an ntcs::Controller
  * e069109 Implement ntsu::SocketOptionUtil::setZeroCopy on Windows
  * c94325d Fix ntcs_controller test driver to be able to handle spurious POLLIN events from event ports on Solaris
  * d8ba307 Maintainence for AIX and Solaris
  * 4d4759c Maintainence for AIX and Solaris
  * 9ddbf80 Update ntso.mem with missing components
  * 32c5b55 Add internal meta-data
  * cbd81d4 Do not exclude network devices that do not have IFF_RUNNING set enumerating network devices
  * 07c817e Ensure that reading from error queue does not hang if the socket is in a blocking mode or recvmsg returns 0
  * 5a04483 Consolidate run-time checks determine support for timestamping and zero-copy
  * eaef18d Support zero-copy transmission on Linux through reactor-based ntci::DatagramSockets and ntci::StreamSockets
  * 835d7e2 Make path to toolchain.cmake configurable
  * a5997c6 Hoist scope of struct ::iovec array to be consistent with the scope of struct ::msghdr
  * 8526fef Selectively disable -Wmaybe-uninitialized
  * 1431943 Log operation of ntco_kqueue using ntci_log instead of bsls_log
  * 19af8ae Correct the name of the ntsu_zerocopyutil test driver
  * f4ea959 GitHub Actions: stop on first failure and cat ctest log
  * f73e830 Correctly reschedule an initially non-recurring timer when a new definite period is specified
  * 87a2533 Support zero-copy transmissions in NTS
  * a512761 GitHub Actions: cache dependencies and reorganize file locations
  * 013191a Fix incorrect polling for events in ntcs_controller tests and port the test driver to all platforms
  * 2f5a5a0 Add initial support for GitHub Actions
  * 5156042 Merge backwards-incompatible ntci::Proactor::detachSocketAsync with detachSocket
  * 9d40528 Fix trivial compiler error initializing control channel implemented with anonymous pipes
  * fff52db Implement the control channel on Windows with a Unix domain socket pair, but fall back to TCP if necessary
  * b834498 Support sending and receiving file descriptors over Unix domain sockets
  * 25c786c Provide a simple, single-threaded abstraction of select, poll, epoll, kqueue, /dev/poll, event ports, and pollset
  * 43d8cc0 Create all timer callbacks bound to a strong reference to 'this' with the standard strand semantics and announce rate limit events
  * a878579 Overload ntsa::LocalName::generateUnique to return an error and check for failure where called
  * 71bcc3a Implement asynchronous socket detachment for reactors and proactors
  * 3baad2e Release 2.2.4
  * 2c0db84 Enhance the build configuration scripts to optionally generate CLion configuration files
  * 05b08bb Allow toolchain.cmake to properly detect compiler paths already save in the CMake variable cache
  * 87f45c5 Do not read LOCATION property from targets during verbose CMake configuration
  * ffe209a Release 2.2.3
  * 34974ef Install headers generated at configuration time under nts-headers and ntc-headers, respectively
  * 6252205 Release 2.2.2
  * fd0275c Install ntscfg_config.h and ntscfg_config.h as part of the nts and ntc components, respectively
  * b453a46 Release 2.2.1

 -- Matt Millett <mmillett2@bloomberg.net>  Fri, 16 Feb 2024 12:15:03 -0500

ntf-core (2.2.0) git; urgency=low

  * 4bd7b8c Release 2.2.0
  * a49817f Release 2.2.0
  * af25d8a Fix timestamping tests for network devices that don't support timestamps
  * b470fdb Implement all less-than comparator operators in terms of only less-then comparator operators
  * e887378 Update build system: support standalone libraries, pkgconfig Libs.private, and do not require debuggers to be found on the PATH
  * ed7dd0d Increase ntcs::Event::d_address size to >= _SS_MAXSIZE on all supported Unix platforms, by platform
  * 8fcdf31 Set architecture flags in toolchain.cmake for Solaris and AIX compilers
  * 2f21e9a Support a default, globally-accessible ntci::Interface
  * c6cb817 Increase ntcs::Event::d_address size to >= _SS_MAXSIZE on all supported Unix platforms
  * b3a640b Implement an ntci::Proactor using io_uring
  * 9a5e12a Do not require gdb/lldb to be found on the path
  * a82f30b Lock the mutex inside 'processNotifications()' in ntcr_datagramsocket and ntcr_streamsocket
  * 539be03 Fix build system linker flags on Windows and warnings issued when using MSVC v142
  * bc1c548 Support bbs_build as a viable build system
  * f5fa644 Standardize output directory determined by configuration script on Windows
  * b14dd5f Expose the transport used by a proactor socket
  * e67d625 Fix typo specifying link-time code generation options to MSVC
  * 1ed320e Fix equality comparison of domain names
  * 46efa9f Use bsl::numeric_limits instead of constants from cstdint
  * 8ea0cf3 Test resolvers using dns.google.com instead of microsoft.com

 -- Matt Millett <mmillett@mailbox.org>  Wed, 6 Sep 2023 21:34:36 -0400

ntf-core (2.1.0) git; urgency=low

  * a511d00 Release 2.1.0
  * 6d4ad8b Maintenance for Windows: fix ntsu::SocketUtil::isLocal, ntcd::Machine packet timestamp handling, and allow for WSAENETUNREACH connecting to 240.0.0.1 in ntcf_system test driver
  * eed8a81 Implement ntsu::SocketOptionUtil::isLocal on Darwin without using SO_DOMAIN
  * c74b619 Fix a typo in the Quick Start section of README.md stating ntci::Connect instead of ntci::Connector
  * 2956f47 Support TX and RX timestamping on Linux and collect and publish TX and RX system delay as metrics
  * 27a8009 Sort ntsa::Ipv4Endpoint IP addresses from "smaller" to "larger"
  * 0ff3125 Provide a default resolver and allow resolvers to be configured to disallow resolution from the operating system
  * c5f0706 Modify .gitignore to ignore CLion files
  * 737e7e4 Use a class E IPv4 address when testing connections to "non-existent" machines and additionally tolerate ENETUNREACH
  * ab6f596 Respect the CC and CXX environment variables when configuring the toolchain
  * 35dd90c Explicitly specify the source directory when running CMake from the configuration script

 -- Matt Millett <mmillett@mailbox.org>  Fri, 9 Jun 2023 10:47:43 -0400

ntf-core (2.0.0) git; urgency=low

  * efe90a2 Release 2.0.0
  * d24cf19 Explicitly allow more than IOV_MAX buffers to be batched in ntcq_send test driver to match test setup
  * 56e102b Fix overload ambiguity creating an ntci::SendCallback with a shared_ptr to a ntci::Strand-deriving class
  * e3327dc Remove unused variables in ntcq_send
  * 9e9291b Emphasize the user's requirement to explicitly close each timer and socket
  * 73a46fa Modernize the ntcf_system usage examples
  * 485e2af Remove references to defunct s_ntstst/s_ntctst and a_ntsdbg/a_ntcdbg
  * e3ed71d Remove the broken link to the FAQ from README.md
  * 612eb32 Fix service name parsing error assertions
  * 94a3ae4 Copy buffers from a range of write queue entries to the send buffer in a single system call
  * 9c40260 Add NTSU_SOCKETUTIL_DEBUG_RECVMSG
  * 58e0586 Remove artificial limit on the number of buffers to supply to sendmsg
  * 7feb58c Apply the desire to gain/lose interest in readability/writability before announcing that it is done
  * 04a19ba Fix a typo causing a timestamping test in the ntsu_socketutil test driver to fail
  * 6c933e2 Parse port numbers using bdlb::NumericParseUtil::parseUint
  * 59eff7f Return false from ntsa::IpAddress::parse() for empty string arguments
  * c9dee84 Do not set _FORTIFY_SOURCE level in the build system, but include the CFLAGS and CXXFLAGS environment variables
  * c84cbbf Remove obsolete *.txt documentation files from the repo
  * a86c53b Reject string literals containing port numbers out-of-range when resolving service names
  * 3949df7 Support Windows/arm64 (#2)
  * 6ed01d8 Initial open source release

 -- Matt Millett <mmillett@mailbox.org>  Wed, 26 Apr 2023 13:33:56 -0400
